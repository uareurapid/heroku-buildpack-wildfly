#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-"https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

install_java_with_overlay ${BUILD_DIR}

WILDFLY_VERSION="10.1.0.Final"
WILDFLY_SHA1="9ee3c0255e2e6007d502223916cefad2a1a5e333"
JBOSS_HOME=".jboss/wildfly-${WILDFLY_VERSION}"

cd $BUILD_DIR

mkdir -p .jboss

echo -n "-----> Installing Wildfly ${WILDFLY_VERSION}... "
curl --retry 3 -s -O https://download.jboss.org/wildfly/$WILDFLY_VERSION/wildfly-$WILDFLY_VERSION.tar.gz
sha1sum wildfly-$WILDFLY_VERSION.tar.gz | grep $WILDFLY_SHA1 > /dev/null 2>&1
tar xf wildfly-$WILDFLY_VERSION.tar.gz
mv wildfly-$WILDFLY_VERSION $JBOSS_HOME
rm wildfly-$WILDFLY_VERSION.tar.gz
echo "done JBOSS_HOME --> $JBOSS_HOME"

OUTPUT="$(ls -al)"
echo "${OUTPUT}"


echo "---------------------------------"
echo "downloading postgresql driver..."
curl --retry 3 -s -O https://jdbc.postgresql.org/download/postgresql-42.1.1.jar

#TMP_POSTGRESQL_DIR="tmp_drivers"
#mkdir -p $TMP_POSTGRESQL_DIR

#echo "copying driver to temporary working dir $TMP_POSTGRESQL_DIR"
#------------ now install the driver ---------

mv postgresql-42.1.1.jar $JBOSS_HOME/standalone/deployments/
#install postgres driver wildfly

#JBOSS_CLI_FILE="./install_postgresql_module.cli"

#echo 'connect controler=http://127.0.0.1:9990
#module add --name=org.postgres --resources=./tmp_drivers/postgresql-42.1.1.jar --dependencies=javax.api,javax.transaction.api
#/subsystem=datasources/jdbc-driver=postgres:add(driver-name="postgres",driver-module-name="org.postgres",driver-class-name=org.postgresql.Driver)' > $JBOSS_CLI_FILE

#cat $JBOSS_CLI_FILE

#echo "installing the postgresql as a wildfly module"
#$JBOSS_HOME/bin/jboss-cli.sh --file=$JBOSS_CLI_FILE
#echo "done"

#clean temp dir
#rm -rf $TMP_POSTGRESQL_DIR

#OUTPUT_DEPLOYMENTS="$(cat $JBOSS_HOME/modules/org/postgres/main/module.xml)"
#---------------------------------------------
#echo "display content of deployments directory:"
#echo "${OUTPUT_DEPLOYMENTS}"

echo -n "-----> Deploying war file(s)... "
cp target/*.war $JBOSS_HOME/standalone/deployments/
echo "done"


echo "-----> Creating configuration..."
if [ -f $BUILD_DIR/Procfile ]; then
  echo "        - Using existing process types"
else
  cat << EOF > $BUILD_DIR/Procfile
web: \$JBOSS_HOME/bin/standalone.sh -b=0.0.0.0 -Djboss.http.port=\$PORT
EOF
fi






cat << EOF > $BUILD_DIR/.profile.d/jboss.sh
export JBOSS_HOME=${JBOSS_HOME}
EOF
